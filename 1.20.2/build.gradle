plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name + "-" + project.minecraft_version
version = project.mod_version
group = project.maven_group

loom {
	runtimeOnlyLog4j = true
}

repositories {

    maven {
        name = 'TerraformersMC'
        url = 'https://maven.terraformersmc.com/'
    }

	// interference
	maven {
		url = "https://api.modrinth.com/maven"
	}

    mavenLocal()

}

runClient {

}

loom {
	runtimeOnlyLog4j = true
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Interference API
    modImplementation "maven.modrinth:interference:${project.interference_version}"
    include "maven.modrinth:interference:${project.interference_version}"

    // JMXL
    modImplementation "maven.modrinth:JMXL:${project.jmxl_version}" transitive false
    include "maven.modrinth:JMXL:${project.jmxl_version}" transitive false

	implementation rootProject
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand (
				"version": project.version,
				"loader_version": project.loader_version
		)
	}
}

java {
	withSourcesJar()

	toolchain {
		languageVersion.set(JavaLanguageVersion.of(17))
	}
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
